namespace Emi.Portal.Movil.Logic.Contracts.Services
{
    using System.Threading.Tasks;
    using Emi.Portal.Movil.Logic.Models.Requests;
    using Emi.Portal.Movil.Logic.Models.Responses;

    public interface IApiService
    {
        string Token { get; set; }
        Task<ResponseAddMember> AddMember(RequestAddMember request);
        Task<ResponseCancelCoordination> CancelPendingCoordination(RequestCancelPendingCoordination request);
        Task<ResponseCancelPreRegister> CancelPreRegister(RequestCancelPreRegister request);
        Task<ResponseChangePassword> ChangePassword(RequestChangePassword request);
        Task<ResponsePendingCoordinations> ConfirmCoordination(RequestNewMedicalCenterCoordination request);
        Task<ResponseForgotPassword> ForgotPassword(RequestForgotPassword request);
        Task<ResponseAffiliate> GetAffiliate(RequestAffiliate request);
        Task<ResponseBeneficiaries> GetBeneficiaries(RequestBeneficiaries request);
        Task<ResponseNearbyClinics> GetClinics(RequestClinics request);
        Task<ResponseDocuments> GetDocuments(RequestDocument request);
        Task<ResponseDocumentRegister> GetDocumentTypesRegister(RequestDocumentRegister request);
        Task<ResponseFamilyMembers> GetFamilyMembers(RequestFamilyMembers requestFamilyMembers);
        Task<ResponseLegalContent> GetLegalContent(RequestLegalContent request);
        Task<ResponseMedicalCenterSchedules> GetMedicalCenterSchedules(RequestMedicalCenterSchedules request);
        Task<ResponseFaqs> GetAllFaqs();
        Task<ResponseCoordinationPaymentMethod> GetPaymentMethods(RequestCoordinationPaymentMethod request);
        Task<ResponsePendingCoordinations> GetPendingCoordinations(RequestPendingCoordinations request);
        Task<ResponseServiceTypes> GetServicesTypes(RequestServiceTypes request);
        Task<ResponseSpecialities> GetSpecialties(RequestSpecialities request);
        Task<ResponseLogin> Login(RequestLogin request);
        Task<ResponsePreRegister> PreRegister(RequestPreRegister request);
        Task<ResponsePreConfirmNewMedicalCenterCoordination> PreConfirmNewMedicalCenterCoordination(RequestPreConfirmNewMedicalCenterCoordination request);
        Task<ResponsePreRegister> SendVerificationCode(RequestSendVerificationCode request);
        Task<ResponsePreRegister> RegisterUpdateEmail(RequestRegisterUpdateEmail request);
        Task<ResponsePreRegister> Register(RequestRegister request);
        Task<ResponseRemoveMember> RemoveMember(RequestRemoveMember request);
        Task<ResponseSearchMember> SearchMember(RequestSearchMember request);
        Task<ResponseBase> SendActivationEmail(RequestSendActivationEmail request);
        Task<ResponseUpdateAffiliate> UpdateAffiliate(RequestUpdateAffiliate request);
        Task<ResponseUpdateMember> UpdateMember(RequestUpdateMember request);
        Task<ResponsePayMedicalCenterCoordination> PayMedicalCenterCoordination(RequestPayMedicalCenterCoordination request);
        Task<ResponseAllFaqsGroup> GetAllFaqsGroup(RequestAllFaqsGroup request);
        Task<ResponseContactPhones> GetContactPhones(RequestContactPhones request);
        Task<ResponseServicesHistoryLists> GetServicesHistoryLists(RequestServicesHistoryLists request);
        Task<ResponseServicesHistory> GetServicesHistory(RequestServicesHistory request);
        Task<ResponseSendServiceFile> SendServiceFile(RequestSendServiceFile request);
        Task<ResponseServiceFile> GetServiceFile(RequestServiceFile request);
        Task<ResponseSheduledServices> GetSheduledServices(RequestSheduledServices request);
        Task<ResponseFile> PostFile(FileRequest request);
        Task<ResponseCancelService> CancelService(RequestCancelService request);
        Task<ResponseServiceQualify> GetServiceQualify(RequestServiceQualify request);
        Task<ResponseQualifyQuestion> QualifyQuestion(RequestQualifyQuestion request);
        Task<ResponseServicesEnabled> GetServicesEnabled(RequestServicesEnabled request);
        Task<ResponseBeneficiaries> GetPersons(RequestPeople request);
        Task<ResponseStandarizedAddressLists> GetStandarizedAddressLists(RequestStandarizedAddressLists request);
        Task<ResponseDepartments> GetDepartments(RequestDepartments request);
        Task<ResponseCities> GetCities(RequestCities request);
        Task<ResponseNeighborhoods> GetNeighborhoods(RequestNeighborhoods request);
        Task<ResponseCoverage> GetCoverage(RequestCoverage request);
        Task<ResponseLocationInformationService> GetLocationInformationService(RequestLocationInformationService request);
        Task<ResponseValidateCoverage> ValidateCoverage(RequestValidateCoverage request);
        Task<ResponseMedicalService> HomeHealthCare(RequestMedicalService request);
        Task<ResponseMedicalService> MedicalOrientation(RequestMedicalService request);
        Task<ResponseServiceChatAgent> GetServiceChatAgent(RequestServiceChatAgent request);
        Task<ResponseSoftwareVersion> GetSoftwareVersion(RequestSoftwareVersion request);
        Task<ResponseExistsMedicalHomeService> GetExistsMedicalHomeService(RequestExistsMedicalHomeService request);
        Task<ResponseCancelMedicalHomeService> CancelMedicalHomeService(RequestCancelMedicalHomeService request);
        Task<ResponseStatusInvoices> GetStatusInvoices(RequestStatusInvoice request);
        Task<ResponseInvoices> GetInvoices(RequestInvoices request);
        Task<ResponseInvoiceDetail> GetInvoiceDetail(RequestInvoiceDetail request);
        Task<ResponseValidateUserYoung> ValidateUserYoung(RequestValidateUserYoung request);
        Task<ResponseMinorAuthorizations> GetMinorAuthorizations(RequestMinorAuthorizations request);
        Task<ResponseOpenTokDataForAffiliate> GetOpenTokDataForAffiliate(RequestMedicalService request);
        Task<ResponseBase> ChangeEmail(RequestEmail request);
        Task<ResponseDeactivationType> DeactivationType();
        Task<ResponseBase> DisableAccount(RequestDeactivateUserAccount request);
        Task<ResponseAsociatedUserAccounts> GetAsociatedUserAccounts(RequestAsociatedUserAccounts request);
        Task<ResponseBase> VerifyCodeForgortPassword(RequestVerifyCodeForgortPassword request);
        Task<ResponseBase> SetPassword(RequestSetPassword request);
        Task<ResponseAuthorizeChangePassword> AuthorizeChangePasswordByCellPhone(RequestAuthorizeChangePassword request);
        Task<ResponseCountries> GetCountryRedSiem();
        Task<ResponseCities> GetCitiesRedSiem(RequestCitiesRedSiem request);
        Task<RefundTypeResponse> GetRefundType();
        Task<ResponseOpenTokDataForAffiliate> GetOpenTokRoutedSession(int retryNumber=0);
        Task<ResponseOpenTokDataForAffiliate> SendRatingCall(RequestSendRatingCall request);
        Task<ResponseVersion> ValidateVersion();
        Task<ResponseAreas> GetAreas();
        Task<RealTimeConfigurationResponse> GetFirebaseConfiguration();
        Task<ResponseCertificateBeneficiaries> GetUsersCertificate(Request request);
        Task<PostPatientServiceTypeResponse> PostPatientServiceType(RequestPostPatientServiceType request);
        Task<ReasonsAbandonmentResponse> GetReasonsAbandonment();
        Task<ResponseCertificates> GetCertificates(RequestCertificates request);
        Task<ResponseBase> SendCertAffiliatedPayments(RequestDownloadCertificate request);
        Task<PostIntentResponse> PostIntent(RequestMedicalService request);
        Task<ResponseDownloadCertificate> GetDownloadCertAffiliatedPayments(RequestDownloadCertificate request);
        Task<ResponsePQRSValidateUser> GetPQRSUser(RequestPQRSUser request);
        Task<ResponseEventType> GetEventType();
        Task<ResponsePQRSCreated> PostPQRS(RequestCreatePQRS request);
        Task<ResponseTracingPQRS> GetTracingPQRS(Request request);
        Task<ResponseTermsConditions> GetPQRSTermsConditions();
        Task<RefundTypeResponse> GetRefundType(RefundTypeRequest request);
        Task<ResponseMenu> GetMenu(Request request);
        Task<ResponseContractedPlans> GetContractedPlans(Request request);
        Task<ResponseHasDebt> GetHastDebt(Request request);
        Task<ResponseGenders> GetGenders();
        Task<ResponseCards> GetAffiliateCard(Request request);
        Task<ResponseValidateRPWithdrawal> ValidateRPWithdrawalRetired(Request request);
        Task<ResponseExpiredMedicalServices> GetExpiredProducts(RequestExpiredMedicalServices request);
        Task<ResponseNewCoverage> GetNewCoverage(RequestNewCoverage request);
        Task<ResponseNewCoverage> GetCoverageLatLong(RequestCoverageLatLong request);
        Task<ResponseNewVideocall> NewVideocallPetition(RequestNewVideoCall request);
        Task<ResponsePediatricAgendas> GetPediatricAgendas(RequestPediatricAgendas request);
        Task<ResponsePediatricPetition> CreatePediatricPetition(RequestPediatricAttention request);
        Task<ResponseValidatePediatricServices> ValidatePediatricServices(Request request);
        Task<ResponseRegisterMinor> RegisterMinor(RequestRegisterMinor request);
        Task<ReponseYoungMembers> GetYoungMembers(Request request);
        Task<ResponseContingencyMessages> GetContingencyMessages();
    }
}
